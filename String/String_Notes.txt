String:-> Is a Sequence of character or stream of character.

->anything inside ' '  is a character.

->ASCII=>American Standard code for information interchange.

->any combination of any symbol is a String i.e. 123abc,abc34@,#123,67

->there is no datatype for string so we use char.

->Array for string is: character array-> char carr[100]

-> scanf statement is not valid for character array because giving the value of n is quite difficult due to we need to count the length of string first.

->delimeter=> 1.enter 2.space

->format specifier for string is '%s'

->special symbol '\0' indicates the end of string ....it's the only symbol in single quote which having    two character.

->ex=>
        #include<stdio.h>
	void main()
	{
		char carr[100];
		printf("Enter name\n");
		scanf("%s",carr);
		print("%s",carr);
	}
o/p: Enter Name kiran Tajanpure
     it prints Kiran only because it trits space and enter as a delimeter. that's why we are not able to use scanf in string.
->so gets is a replacement for scanf. gets means get string.
->#include<stdio.h>
	void main()
	{
		char carr[5];
		printf("Enter name:\n");
		gets(carr);
		print("%s",carr);
	}
o/p: Enter Name: kiran Tajanpure
it prints kiran tajanpure but we give size of array is 5 still it prints the whole string untion \n or enter is not encounterd.
->so gets is also not valid.
->now let's see-------->fgets():
->#include<stdio.h>
	void main()
	{
		char carr[5];
		printf("Enter name:\n");
		fgets(carr,sizeof(carr),stdin);
		print("%s",carr);
	}
o/p: Enter Name: kiran Tajanpure
->it prints kira ....because size id 5 it takes 4 character ours and one it's own character i.e. '\0'
let's remember about fgets----->
#include<stdio.h>
	void main()
	{
		char carr[100];
		printf("Enter name:\n");
		fgets(carr,sizeof(carr),stdin);
		print("%s",carr);
	}
o/p: Enter Name: kiran Tajanpure
-> it prints kiran Tajanpure .... here the length of string is 15 but it counts 14 + 1 space + \n + \0=>17
